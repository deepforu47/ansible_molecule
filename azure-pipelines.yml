# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  name: Default

variables:
- name: ANSIBLE_CONFIG
  value: "$HOME/.ansible.cfg"
- name: PATH
  value: "$PATH:/usr/local/bin"
- name: MOLECULE_SCENARIO_NAME
  value: "podman"
- name: VERIFIER_NAME
  value: "testinfra"

# steps:
# - script: |
#     /usr/local/bin/podman -v
#     /usr/local/bin/ansible  --version
#     /usr/local/bin/molecule --version
#   displayName: 'Display versions'

# - script: |
#     cd ${Build.SourcesDirectory} ; molecule -c .config/molecule/config.yml cleanup -s $MOLECULE_SCENARIO_NAME 
#     cd ${Build.SourcesDirectory} ; molecule -c .config/molecule/config.yml destroy -s $MOLECULE_SCENARIO_NAME
#   displayName: 'Molecule: Clean up environment'

# - script: |
#     cd ${Build.SourcesDirectory} ; molecule -c .config/molecule/config.yml test -s $MOLECULE_SCENARIO_NAMEE
#   displayName: 'Molecule: Test all the matrix'

stages:
- stage: checkversion
  displayName: Ansible Molecule Framework Demo
  # Job list
  jobs:
  - job: checkversion
    displayName: Execute Ansible tests using Molecules

    steps:

    - script: |
        /usr/local/bin/podman -v
        /usr/local/bin/ansible  --version
        /usr/local/bin/molecule --version
      displayName: 'Display Binaries versions'

    # - script: |
    #     molecule -c .config/molecule/config.yml cleanup -s $MOLECULE_SCENARIO_NAME 
    #     molecule -c .config/molecule/config.yml destroy -s $MOLECULE_SCENARIO_NAME
    #   workingDirectory: '$(build.sourcesdirectory)'
    #   displayName: 'Molecule: Clean up environment'
      

    - script: |
        molecule -c .config/molecule/config.yml --debug test -s $MOLECULE_SCENARIO_NAME --destroy=never
      displayName: 'Molecule: Test Ansbile Molecule $MOLECULE_SCENARIO_NAME scenario'
      workingDirectory: '$(build.sourcesdirectory)'     

